{"ast":null,"code":"'use strict';\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar React = _interopDefault(require('react'));\n\nvar reactDom = require('react-dom');\n\nvar invariant = _interopDefault(require('invariant'));\n\nvar warning = _interopDefault(require('warning'));\n\nfunction _defaults2(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _defaults2(subClass, superClass);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction setInputSelection(input, start, end) {\n  if ('selectionStart' in input && 'selectionEnd' in input) {\n    input.selectionStart = start;\n    input.selectionEnd = end;\n  } else {\n    var range = input.createTextRange();\n    range.collapse(true);\n    range.moveStart('character', start);\n    range.moveEnd('character', end - start);\n    range.select();\n  }\n}\n\nfunction getInputSelection(input) {\n  var start = 0;\n  var end = 0;\n\n  if ('selectionStart' in input && 'selectionEnd' in input) {\n    start = input.selectionStart;\n    end = input.selectionEnd;\n  } else {\n    var range = document.selection.createRange();\n\n    if (range.parentElement() === input) {\n      start = -range.moveStart('character', -input.value.length);\n      end = -range.moveEnd('character', -input.value.length);\n    }\n  }\n\n  return {\n    start: start,\n    end: end,\n    length: end - start\n  };\n}\n\nvar defaultFormatChars = {\n  '9': '[0-9]',\n  'a': '[A-Za-z]',\n  '*': '[A-Za-z0-9]'\n};\nvar defaultMaskChar = '_';\n\nfunction parseMask(mask, maskChar, formatChars) {\n  var parsedMaskString = '';\n  var prefix = '';\n  var lastEditablePosition = null;\n  var permanents = [];\n\n  if (maskChar === undefined) {\n    maskChar = defaultMaskChar;\n  }\n\n  if (formatChars == null) {\n    formatChars = defaultFormatChars;\n  }\n\n  if (!mask || typeof mask !== 'string') {\n    return {\n      maskChar: maskChar,\n      formatChars: formatChars,\n      mask: null,\n      prefix: null,\n      lastEditablePosition: null,\n      permanents: []\n    };\n  }\n\n  var isPermanent = false;\n  mask.split('').forEach(function (character) {\n    if (!isPermanent && character === '\\\\') {\n      isPermanent = true;\n    } else {\n      if (isPermanent || !formatChars[character]) {\n        permanents.push(parsedMaskString.length);\n\n        if (parsedMaskString.length === permanents.length - 1) {\n          prefix += character;\n        }\n      } else {\n        lastEditablePosition = parsedMaskString.length + 1;\n      }\n\n      parsedMaskString += character;\n      isPermanent = false;\n    }\n  });\n  return {\n    maskChar: maskChar,\n    formatChars: formatChars,\n    prefix: prefix,\n    mask: parsedMaskString,\n    lastEditablePosition: lastEditablePosition,\n    permanents: permanents\n  };\n}\n/* eslint no-use-before-define: [\"error\", { functions: false }] */\n\n\nfunction isPermanentCharacter(maskOptions, pos) {\n  return maskOptions.permanents.indexOf(pos) !== -1;\n}\n\nfunction isAllowedCharacter(maskOptions, pos, character) {\n  var mask = maskOptions.mask,\n      formatChars = maskOptions.formatChars;\n\n  if (!character) {\n    return false;\n  }\n\n  if (isPermanentCharacter(maskOptions, pos)) {\n    return mask[pos] === character;\n  }\n\n  var ruleChar = mask[pos];\n  var charRule = formatChars[ruleChar];\n  return new RegExp(charRule).test(character);\n}\n\nfunction isEmpty(maskOptions, value) {\n  return value.split('').every(function (character, i) {\n    return isPermanentCharacter(maskOptions, i) || !isAllowedCharacter(maskOptions, i, character);\n  });\n}\n\nfunction getFilledLength(maskOptions, value) {\n  var maskChar = maskOptions.maskChar,\n      prefix = maskOptions.prefix;\n\n  if (!maskChar) {\n    while (value.length > prefix.length && isPermanentCharacter(maskOptions, value.length - 1)) {\n      value = value.slice(0, value.length - 1);\n    }\n\n    return value.length;\n  }\n\n  var filledLength = prefix.length;\n\n  for (var i = value.length; i >= prefix.length; i--) {\n    var character = value[i];\n    var isEnteredCharacter = !isPermanentCharacter(maskOptions, i) && isAllowedCharacter(maskOptions, i, character);\n\n    if (isEnteredCharacter) {\n      filledLength = i + 1;\n      break;\n    }\n  }\n\n  return filledLength;\n}\n\nfunction isFilled(maskOptions, value) {\n  return getFilledLength(maskOptions, value) === maskOptions.mask.length;\n}\n\nfunction formatValue(maskOptions, value) {\n  var maskChar = maskOptions.maskChar,\n      mask = maskOptions.mask,\n      prefix = maskOptions.prefix;\n\n  if (!maskChar) {\n    value = insertString(maskOptions, '', value, 0);\n\n    if (value.length < prefix.length) {\n      value = prefix;\n    }\n\n    while (value.length < mask.length && isPermanentCharacter(maskOptions, value.length)) {\n      value += mask[value.length];\n    }\n\n    return value;\n  }\n\n  if (value) {\n    var emptyValue = formatValue(maskOptions, '');\n    return insertString(maskOptions, emptyValue, value, 0);\n  }\n\n  for (var i = 0; i < mask.length; i++) {\n    if (isPermanentCharacter(maskOptions, i)) {\n      value += mask[i];\n    } else {\n      value += maskChar;\n    }\n  }\n\n  return value;\n}\n\nfunction clearRange(maskOptions, value, start, len) {\n  var end = start + len;\n  var maskChar = maskOptions.maskChar,\n      mask = maskOptions.mask,\n      prefix = maskOptions.prefix;\n  var arrayValue = value.split('');\n\n  if (!maskChar) {\n    // remove any permanent chars after clear range, they will be added back by formatValue\n    for (var i = end; i < arrayValue.length; i++) {\n      if (isPermanentCharacter(maskOptions, i)) {\n        arrayValue[i] = '';\n      }\n    }\n\n    start = Math.max(prefix.length, start);\n    arrayValue.splice(start, end - start);\n    value = arrayValue.join('');\n    return formatValue(maskOptions, value);\n  }\n\n  return arrayValue.map(function (character, i) {\n    if (i < start || i >= end) {\n      return character;\n    }\n\n    if (isPermanentCharacter(maskOptions, i)) {\n      return mask[i];\n    }\n\n    return maskChar;\n  }).join('');\n}\n\nfunction insertString(maskOptions, value, insertStr, insertPosition) {\n  var mask = maskOptions.mask,\n      maskChar = maskOptions.maskChar,\n      prefix = maskOptions.prefix;\n  var arrayInsertStr = insertStr.split('');\n  var isInputFilled = isFilled(maskOptions, value);\n\n  var isUsablePosition = function isUsablePosition(pos, character) {\n    return !isPermanentCharacter(maskOptions, pos) || character === mask[pos];\n  };\n\n  var isUsableCharacter = function isUsableCharacter(character, pos) {\n    return !maskChar || !isPermanentCharacter(maskOptions, pos) || character !== maskChar;\n  };\n\n  if (!maskChar && insertPosition > value.length) {\n    value += mask.slice(value.length, insertPosition);\n  }\n\n  arrayInsertStr.every(function (insertCharacter) {\n    while (!isUsablePosition(insertPosition, insertCharacter)) {\n      if (insertPosition >= value.length) {\n        value += mask[insertPosition];\n      }\n\n      if (!isUsableCharacter(insertCharacter, insertPosition)) {\n        return true;\n      }\n\n      insertPosition++; // stop iteration if maximum value length reached\n\n      if (insertPosition >= mask.length) {\n        return false;\n      }\n    }\n\n    var isAllowed = isAllowedCharacter(maskOptions, insertPosition, insertCharacter) || insertCharacter === maskChar;\n\n    if (!isAllowed) {\n      return true;\n    }\n\n    if (insertPosition < value.length) {\n      if (maskChar || isInputFilled || insertPosition < prefix.length) {\n        value = value.slice(0, insertPosition) + insertCharacter + value.slice(insertPosition + 1);\n      } else {\n        value = value.slice(0, insertPosition) + insertCharacter + value.slice(insertPosition);\n        value = formatValue(maskOptions, value);\n      }\n    } else if (!maskChar) {\n      value += insertCharacter;\n    }\n\n    insertPosition++; // stop iteration if maximum value length reached\n\n    return insertPosition < mask.length;\n  });\n  return value;\n}\n\nfunction getInsertStringLength(maskOptions, value, insertStr, insertPosition) {\n  var mask = maskOptions.mask,\n      maskChar = maskOptions.maskChar;\n  var arrayInsertStr = insertStr.split('');\n  var initialInsertPosition = insertPosition;\n\n  var isUsablePosition = function isUsablePosition(pos, character) {\n    return !isPermanentCharacter(maskOptions, pos) || character === mask[pos];\n  };\n\n  arrayInsertStr.every(function (insertCharacter) {\n    while (!isUsablePosition(insertPosition, insertCharacter)) {\n      insertPosition++; // stop iteration if maximum value length reached\n\n      if (insertPosition >= mask.length) {\n        return false;\n      }\n    }\n\n    var isAllowed = isAllowedCharacter(maskOptions, insertPosition, insertCharacter) || insertCharacter === maskChar;\n\n    if (isAllowed) {\n      insertPosition++;\n    } // stop iteration if maximum value length reached\n\n\n    return insertPosition < mask.length;\n  });\n  return insertPosition - initialInsertPosition;\n}\n\nfunction getLeftEditablePosition(maskOptions, pos) {\n  for (var i = pos; i >= 0; --i) {\n    if (!isPermanentCharacter(maskOptions, i)) {\n      return i;\n    }\n  }\n\n  return null;\n}\n\nfunction getRightEditablePosition(maskOptions, pos) {\n  var mask = maskOptions.mask;\n\n  for (var i = pos; i < mask.length; ++i) {\n    if (!isPermanentCharacter(maskOptions, i)) {\n      return i;\n    }\n  }\n\n  return null;\n}\n\nfunction getStringValue(value) {\n  return !value && value !== 0 ? '' : value + '';\n}\n\nfunction processChange(maskOptions, value, selection, previousValue, previousSelection) {\n  var mask = maskOptions.mask,\n      prefix = maskOptions.prefix,\n      lastEditablePosition = maskOptions.lastEditablePosition;\n  var newValue = value;\n  var enteredString = '';\n  var formattedEnteredStringLength = 0;\n  var removedLength = 0;\n  var cursorPosition = Math.min(previousSelection.start, selection.start);\n\n  if (selection.end > previousSelection.start) {\n    enteredString = newValue.slice(previousSelection.start, selection.end);\n    formattedEnteredStringLength = getInsertStringLength(maskOptions, previousValue, enteredString, cursorPosition);\n\n    if (!formattedEnteredStringLength) {\n      removedLength = 0;\n    } else {\n      removedLength = previousSelection.length;\n    }\n  } else if (newValue.length < previousValue.length) {\n    removedLength = previousValue.length - newValue.length;\n  }\n\n  newValue = previousValue;\n\n  if (removedLength) {\n    if (removedLength === 1 && !previousSelection.length) {\n      var deleteFromRight = previousSelection.start === selection.start;\n      cursorPosition = deleteFromRight ? getRightEditablePosition(maskOptions, selection.start) : getLeftEditablePosition(maskOptions, selection.start);\n    }\n\n    newValue = clearRange(maskOptions, newValue, cursorPosition, removedLength);\n  }\n\n  newValue = insertString(maskOptions, newValue, enteredString, cursorPosition);\n  cursorPosition = cursorPosition + formattedEnteredStringLength;\n\n  if (cursorPosition >= mask.length) {\n    cursorPosition = mask.length;\n  } else if (cursorPosition < prefix.length && !formattedEnteredStringLength) {\n    cursorPosition = prefix.length;\n  } else if (cursorPosition >= prefix.length && cursorPosition < lastEditablePosition && formattedEnteredStringLength) {\n    cursorPosition = getRightEditablePosition(maskOptions, cursorPosition);\n  }\n\n  newValue = formatValue(maskOptions, newValue);\n\n  if (!enteredString) {\n    enteredString = null;\n  }\n\n  return {\n    value: newValue,\n    enteredString: enteredString,\n    selection: {\n      start: cursorPosition,\n      end: cursorPosition\n    }\n  };\n}\n\nfunction isWindowsPhoneBrowser() {\n  var windows = new RegExp('windows', 'i');\n  var phone = new RegExp('phone', 'i');\n  var ua = navigator.userAgent;\n  return windows.test(ua) && phone.test(ua);\n}\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nfunction getRequestAnimationFrame() {\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n}\n\nfunction getCancelAnimationFrame() {\n  return window.cancelAnimationFrame || window.webkitCancelRequestAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame;\n}\n\nfunction defer(fn) {\n  var hasCancelAnimationFrame = !!getCancelAnimationFrame();\n  var deferFn;\n\n  if (hasCancelAnimationFrame) {\n    deferFn = getRequestAnimationFrame();\n  } else {\n    deferFn = function deferFn() {\n      return setTimeout(fn, 1000 / 60);\n    };\n  }\n\n  return deferFn(fn);\n}\n\nfunction cancelDefer(deferId) {\n  var cancelFn = getCancelAnimationFrame() || clearTimeout;\n  cancelFn(deferId);\n}\n\nvar InputElement = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InputElement, _React$Component);\n\n  function InputElement(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.focused = false;\n    _this.mounted = false;\n    _this.previousSelection = null;\n    _this.selectionDeferId = null;\n    _this.saveSelectionLoopDeferId = null;\n\n    _this.saveSelectionLoop = function () {\n      _this.previousSelection = _this.getSelection();\n      _this.saveSelectionLoopDeferId = defer(_this.saveSelectionLoop);\n    };\n\n    _this.runSaveSelectionLoop = function () {\n      if (_this.saveSelectionLoopDeferId === null) {\n        _this.saveSelectionLoop();\n      }\n    };\n\n    _this.stopSaveSelectionLoop = function () {\n      if (_this.saveSelectionLoopDeferId !== null) {\n        cancelDefer(_this.saveSelectionLoopDeferId);\n        _this.saveSelectionLoopDeferId = null;\n        _this.previousSelection = null;\n      }\n    };\n\n    _this.getInputDOMNode = function () {\n      if (!_this.mounted) {\n        return null;\n      }\n\n      var input = reactDom.findDOMNode(_assertThisInitialized(_assertThisInitialized(_this)));\n      var isDOMNode = typeof window !== 'undefined' && input instanceof window.Element; // workaround for react-test-renderer\n      // https://github.com/sanniassin/react-input-mask/issues/147\n\n      if (input && !isDOMNode) {\n        return null;\n      }\n\n      if (input.nodeName !== 'INPUT') {\n        input = input.querySelector('input');\n      }\n\n      if (!input) {\n        throw new Error('react-input-mask: inputComponent doesn\\'t contain input node');\n      }\n\n      return input;\n    };\n\n    _this.getInputValue = function () {\n      var input = _this.getInputDOMNode();\n\n      if (!input) {\n        return null;\n      }\n\n      return input.value;\n    };\n\n    _this.setInputValue = function (value) {\n      var input = _this.getInputDOMNode();\n\n      if (!input) {\n        return;\n      }\n\n      _this.value = value;\n      input.value = value;\n    };\n\n    _this.setCursorToEnd = function () {\n      var filledLength = getFilledLength(_this.maskOptions, _this.value);\n      var pos = getRightEditablePosition(_this.maskOptions, filledLength);\n\n      if (pos !== null) {\n        _this.setCursorPosition(pos);\n      }\n    };\n\n    _this.setSelection = function (start, end, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var input = _this.getInputDOMNode();\n\n      var isFocused = _this.isFocused(); // don't change selection on unfocused input\n      // because Safari sets focus on selection change (#154)\n\n\n      if (!input || !isFocused) {\n        return;\n      }\n\n      var _options = options,\n          deferred = _options.deferred;\n\n      if (!deferred) {\n        setInputSelection(input, start, end);\n      }\n\n      if (_this.selectionDeferId !== null) {\n        cancelDefer(_this.selectionDeferId);\n      } // deferred selection update is required for pre-Lollipop Android browser,\n      // but for consistent behavior we do it for all browsers\n\n\n      _this.selectionDeferId = defer(function () {\n        _this.selectionDeferId = null;\n        setInputSelection(input, start, end);\n      });\n      _this.previousSelection = {\n        start: start,\n        end: end,\n        length: Math.abs(end - start)\n      };\n    };\n\n    _this.getSelection = function () {\n      var input = _this.getInputDOMNode();\n\n      return getInputSelection(input);\n    };\n\n    _this.getCursorPosition = function () {\n      return _this.getSelection().start;\n    };\n\n    _this.setCursorPosition = function (pos) {\n      _this.setSelection(pos, pos);\n    };\n\n    _this.isFocused = function () {\n      return _this.focused;\n    };\n\n    _this.getBeforeMaskedValueChangeConfig = function () {\n      var _this$maskOptions = _this.maskOptions,\n          mask = _this$maskOptions.mask,\n          maskChar = _this$maskOptions.maskChar,\n          permanents = _this$maskOptions.permanents,\n          formatChars = _this$maskOptions.formatChars;\n      var alwaysShowMask = _this.props.alwaysShowMask;\n      return {\n        mask: mask,\n        maskChar: maskChar,\n        permanents: permanents,\n        alwaysShowMask: !!alwaysShowMask,\n        formatChars: formatChars\n      };\n    };\n\n    _this.isInputAutofilled = function (value, selection, previousValue, previousSelection) {\n      var input = _this.getInputDOMNode(); // only check for positive match because it will be false negative\n      // in case of autofill simulation in tests\n      //\n      // input.matches throws an exception if selector isn't supported\n\n\n      try {\n        if (input.matches(':-webkit-autofill')) {\n          return true;\n        }\n      } catch (e) {} // if input isn't focused then change event must have been triggered\n      // either by autofill or event simulation in tests\n\n\n      if (!_this.focused) {\n        return true;\n      } // if cursor has moved to the end while previousSelection forbids it\n      // then it must be autofill\n\n\n      return previousSelection.end < previousValue.length && selection.end === value.length;\n    };\n\n    _this.onChange = function (event) {\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n          beforePasteState = _assertThisInitialize.beforePasteState;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_assertThisInitialized(_this)),\n          previousSelection = _assertThisInitialize2.previousSelection;\n\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n\n      var value = _this.getInputValue();\n\n      var previousValue = _this.value;\n\n      var selection = _this.getSelection(); // autofill replaces entire value, ignore old one\n      // https://github.com/sanniassin/react-input-mask/issues/113\n\n\n      if (_this.isInputAutofilled(value, selection, previousValue, previousSelection)) {\n        previousValue = formatValue(_this.maskOptions, '');\n        previousSelection = {\n          start: 0,\n          end: 0,\n          length: 0\n        };\n      } // set value and selection as if we haven't\n      // cleared input in onPaste handler\n\n\n      if (beforePasteState) {\n        previousSelection = beforePasteState.selection;\n        previousValue = beforePasteState.value;\n        selection = {\n          start: previousSelection.start + value.length,\n          end: previousSelection.start + value.length,\n          length: 0\n        };\n        value = previousValue.slice(0, previousSelection.start) + value + previousValue.slice(previousSelection.end);\n        _this.beforePasteState = null;\n      }\n\n      var changedState = processChange(_this.maskOptions, value, selection, previousValue, previousSelection);\n      var enteredString = changedState.enteredString;\n      var newSelection = changedState.selection;\n      var newValue = changedState.value;\n\n      if (isFunction(beforeMaskedValueChange)) {\n        var modifiedValue = beforeMaskedValueChange({\n          value: newValue,\n          selection: newSelection\n        }, {\n          value: previousValue,\n          selection: previousSelection\n        }, enteredString, _this.getBeforeMaskedValueChangeConfig());\n        newValue = modifiedValue.value;\n        newSelection = modifiedValue.selection;\n      }\n\n      _this.setInputValue(newValue);\n\n      if (isFunction(_this.props.onChange)) {\n        _this.props.onChange(event);\n      }\n\n      if (_this.isWindowsPhoneBrowser) {\n        _this.setSelection(newSelection.start, newSelection.end, {\n          deferred: true\n        });\n      } else {\n        _this.setSelection(newSelection.start, newSelection.end);\n      }\n    };\n\n    _this.onFocus = function (event) {\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n      var _this$maskOptions2 = _this.maskOptions,\n          mask = _this$maskOptions2.mask,\n          prefix = _this$maskOptions2.prefix;\n      _this.focused = true; // if autoFocus is set, onFocus triggers before componentDidMount\n\n      _this.mounted = true;\n\n      if (mask) {\n        if (!_this.value) {\n          var emptyValue = formatValue(_this.maskOptions, prefix);\n          var newValue = formatValue(_this.maskOptions, emptyValue);\n          var filledLength = getFilledLength(_this.maskOptions, newValue);\n          var cursorPosition = getRightEditablePosition(_this.maskOptions, filledLength);\n          var newSelection = {\n            start: cursorPosition,\n            end: cursorPosition\n          };\n\n          if (isFunction(beforeMaskedValueChange)) {\n            var modifiedValue = beforeMaskedValueChange({\n              value: newValue,\n              selection: newSelection\n            }, {\n              value: _this.value,\n              selection: null\n            }, null, _this.getBeforeMaskedValueChangeConfig());\n            newValue = modifiedValue.value;\n            newSelection = modifiedValue.selection;\n          }\n\n          var isInputValueChanged = newValue !== _this.getInputValue();\n\n          if (isInputValueChanged) {\n            _this.setInputValue(newValue);\n          }\n\n          if (isInputValueChanged && isFunction(_this.props.onChange)) {\n            _this.props.onChange(event);\n          }\n\n          _this.setSelection(newSelection.start, newSelection.end);\n        } else if (getFilledLength(_this.maskOptions, _this.value) < _this.maskOptions.mask.length) {\n          _this.setCursorToEnd();\n        }\n\n        _this.runSaveSelectionLoop();\n      }\n\n      if (isFunction(_this.props.onFocus)) {\n        _this.props.onFocus(event);\n      }\n    };\n\n    _this.onBlur = function (event) {\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n      var mask = _this.maskOptions.mask;\n\n      _this.stopSaveSelectionLoop();\n\n      _this.focused = false;\n\n      if (mask && !_this.props.alwaysShowMask && isEmpty(_this.maskOptions, _this.value)) {\n        var newValue = '';\n\n        if (isFunction(beforeMaskedValueChange)) {\n          var modifiedValue = beforeMaskedValueChange({\n            value: newValue,\n            selection: null\n          }, {\n            value: _this.value,\n            selection: _this.previousSelection\n          }, null, _this.getBeforeMaskedValueChangeConfig());\n          newValue = modifiedValue.value;\n        }\n\n        var isInputValueChanged = newValue !== _this.getInputValue();\n\n        if (isInputValueChanged) {\n          _this.setInputValue(newValue);\n        }\n\n        if (isInputValueChanged && isFunction(_this.props.onChange)) {\n          _this.props.onChange(event);\n        }\n      }\n\n      if (isFunction(_this.props.onBlur)) {\n        _this.props.onBlur(event);\n      }\n    };\n\n    _this.onMouseDown = function (event) {\n      // tiny unintentional mouse movements can break cursor\n      // position on focus, so we have to restore it in that case\n      //\n      // https://github.com/sanniassin/react-input-mask/issues/108\n      if (!_this.focused && document.addEventListener) {\n        _this.mouseDownX = event.clientX;\n        _this.mouseDownY = event.clientY;\n        _this.mouseDownTime = new Date().getTime();\n\n        var mouseUpHandler = function mouseUpHandler(mouseUpEvent) {\n          document.removeEventListener('mouseup', mouseUpHandler);\n\n          if (!_this.focused) {\n            return;\n          }\n\n          var deltaX = Math.abs(mouseUpEvent.clientX - _this.mouseDownX);\n          var deltaY = Math.abs(mouseUpEvent.clientY - _this.mouseDownY);\n          var axisDelta = Math.max(deltaX, deltaY);\n\n          var timeDelta = new Date().getTime() - _this.mouseDownTime;\n\n          if (axisDelta <= 10 && timeDelta <= 200 || axisDelta <= 5 && timeDelta <= 300) {\n            _this.setCursorToEnd();\n          }\n        };\n\n        document.addEventListener('mouseup', mouseUpHandler);\n      }\n\n      if (isFunction(_this.props.onMouseDown)) {\n        _this.props.onMouseDown(event);\n      }\n    };\n\n    _this.onPaste = function (event) {\n      if (isFunction(_this.props.onPaste)) {\n        _this.props.onPaste(event);\n      } // event.clipboardData might not work in Android browser\n      // cleaning input to get raw text inside onChange handler\n\n\n      if (!event.defaultPrevented) {\n        _this.beforePasteState = {\n          value: _this.getInputValue(),\n          selection: _this.getSelection()\n        };\n\n        _this.setInputValue('');\n      }\n    };\n\n    _this.handleRef = function (ref) {\n      if (_this.props.children == null && isFunction(_this.props.inputRef)) {\n        _this.props.inputRef(ref);\n      }\n    };\n\n    var _mask = props.mask,\n        _maskChar = props.maskChar,\n        _formatChars = props.formatChars,\n        _alwaysShowMask = props.alwaysShowMask,\n        _beforeMaskedValueChange = props.beforeMaskedValueChange;\n    var defaultValue = props.defaultValue,\n        _value = props.value;\n    _this.maskOptions = parseMask(_mask, _maskChar, _formatChars);\n\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n\n    if (_value == null) {\n      _value = defaultValue;\n    }\n\n    var _newValue = getStringValue(_value);\n\n    if (_this.maskOptions.mask && (_alwaysShowMask || _newValue)) {\n      _newValue = formatValue(_this.maskOptions, _newValue);\n\n      if (isFunction(_beforeMaskedValueChange)) {\n        var oldValue = props.value;\n\n        if (props.value == null) {\n          oldValue = defaultValue;\n        }\n\n        oldValue = getStringValue(oldValue);\n\n        var modifiedValue = _beforeMaskedValueChange({\n          value: _newValue,\n          selection: null\n        }, {\n          value: oldValue,\n          selection: null\n        }, null, _this.getBeforeMaskedValueChangeConfig());\n\n        _newValue = modifiedValue.value;\n      }\n    }\n\n    _this.value = _newValue;\n    return _this;\n  }\n\n  var _proto = InputElement.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true; // workaround for react-test-renderer\n    // https://github.com/sanniassin/react-input-mask/issues/147\n\n    if (!this.getInputDOMNode()) {\n      return;\n    }\n\n    this.isWindowsPhoneBrowser = isWindowsPhoneBrowser();\n\n    if (this.maskOptions.mask && this.getInputValue() !== this.value) {\n      this.setInputValue(this.value);\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var previousSelection = this.previousSelection;\n    var _this$props = this.props,\n        beforeMaskedValueChange = _this$props.beforeMaskedValueChange,\n        alwaysShowMask = _this$props.alwaysShowMask,\n        mask = _this$props.mask,\n        maskChar = _this$props.maskChar,\n        formatChars = _this$props.formatChars;\n    var previousMaskOptions = this.maskOptions;\n    var showEmpty = alwaysShowMask || this.isFocused();\n    var hasValue = this.props.value != null;\n    var newValue = hasValue ? getStringValue(this.props.value) : this.value;\n    var cursorPosition = previousSelection ? previousSelection.start : null;\n    this.maskOptions = parseMask(mask, maskChar, formatChars);\n\n    if (!this.maskOptions.mask) {\n      if (previousMaskOptions.mask) {\n        this.stopSaveSelectionLoop(); // render depends on this.maskOptions and this.value,\n        // call forceUpdate to keep it in sync\n\n        this.forceUpdate();\n      }\n\n      return;\n    } else if (!previousMaskOptions.mask && this.isFocused()) {\n      this.runSaveSelectionLoop();\n    }\n\n    var isMaskChanged = this.maskOptions.mask && this.maskOptions.mask !== previousMaskOptions.mask;\n\n    if (!previousMaskOptions.mask && !hasValue) {\n      newValue = this.getInputValue();\n    }\n\n    if (isMaskChanged || this.maskOptions.mask && (newValue || showEmpty)) {\n      newValue = formatValue(this.maskOptions, newValue);\n    }\n\n    if (isMaskChanged) {\n      var filledLength = getFilledLength(this.maskOptions, newValue);\n\n      if (cursorPosition === null || filledLength < cursorPosition) {\n        if (isFilled(this.maskOptions, newValue)) {\n          cursorPosition = filledLength;\n        } else {\n          cursorPosition = getRightEditablePosition(this.maskOptions, filledLength);\n        }\n      }\n    }\n\n    if (this.maskOptions.mask && isEmpty(this.maskOptions, newValue) && !showEmpty && (!hasValue || !this.props.value)) {\n      newValue = '';\n    }\n\n    var newSelection = {\n      start: cursorPosition,\n      end: cursorPosition\n    };\n\n    if (isFunction(beforeMaskedValueChange)) {\n      var modifiedValue = beforeMaskedValueChange({\n        value: newValue,\n        selection: newSelection\n      }, {\n        value: this.value,\n        selection: this.previousSelection\n      }, null, this.getBeforeMaskedValueChangeConfig());\n      newValue = modifiedValue.value;\n      newSelection = modifiedValue.selection;\n    }\n\n    this.value = newValue;\n    var isValueChanged = this.getInputValue() !== this.value; // render depends on this.maskOptions and this.value,\n    // call forceUpdate to keep it in sync\n\n    if (isValueChanged) {\n      this.setInputValue(this.value);\n      this.forceUpdate();\n    } else if (isMaskChanged) {\n      this.forceUpdate();\n    }\n\n    var isSelectionChanged = false;\n\n    if (newSelection.start != null && newSelection.end != null) {\n      isSelectionChanged = !previousSelection || previousSelection.start !== newSelection.start || previousSelection.end !== newSelection.end;\n    }\n\n    if (isSelectionChanged || isValueChanged) {\n      this.setSelection(newSelection.start, newSelection.end);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n\n    if (this.selectionDeferId !== null) {\n      cancelDefer(this.selectionDeferId);\n    }\n\n    this.stopSaveSelectionLoop();\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        mask = _this$props2.mask,\n        alwaysShowMask = _this$props2.alwaysShowMask,\n        maskChar = _this$props2.maskChar,\n        formatChars = _this$props2.formatChars,\n        inputRef = _this$props2.inputRef,\n        beforeMaskedValueChange = _this$props2.beforeMaskedValueChange,\n        children = _this$props2.children,\n        restProps = _objectWithoutPropertiesLoose(_this$props2, [\"mask\", \"alwaysShowMask\", \"maskChar\", \"formatChars\", \"inputRef\", \"beforeMaskedValueChange\", \"children\"]);\n\n    var inputElement;\n    process.env.NODE_ENV !== \"production\" ? warning( // parse mask to test against actual mask prop as this.maskOptions\n    // will be updated later in componentDidUpdate\n    !restProps.maxLength || !parseMask(mask, maskChar, formatChars).mask, 'react-input-mask: maxLength property shouldn\\'t be passed to the masked input. It breaks masking and unnecessary because length is limited by the mask length.') : void 0;\n\n    if (children) {\n      !isFunction(children) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'react-input-mask: children must be a function') : invariant(false) : void 0;\n      var controlledProps = ['onChange', 'onPaste', 'onMouseDown', 'onFocus', 'onBlur', 'value', 'disabled', 'readOnly'];\n\n      var childrenProps = _extends({}, restProps);\n\n      controlledProps.forEach(function (propId) {\n        return delete childrenProps[propId];\n      });\n      inputElement = children(childrenProps);\n      var conflictProps = controlledProps.filter(function (propId) {\n        return inputElement.props[propId] != null && inputElement.props[propId] !== restProps[propId];\n      });\n      !!conflictProps.length ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-input-mask: the following props should be passed to the react-input-mask's component and should not be altered in children's function: \" + conflictProps.join(', ')) : invariant(false) : void 0;\n      process.env.NODE_ENV !== \"production\" ? warning(!inputRef, 'react-input-mask: inputRef is ignored when children is passed, attach ref to the children instead') : void 0;\n    } else {\n      inputElement = React.createElement(\"input\", _extends({\n        ref: this.handleRef\n      }, restProps));\n    }\n\n    var changedProps = {\n      onFocus: this.onFocus,\n      onBlur: this.onBlur\n    };\n\n    if (this.maskOptions.mask) {\n      if (!restProps.disabled && !restProps.readOnly) {\n        changedProps.onChange = this.onChange;\n        changedProps.onPaste = this.onPaste;\n        changedProps.onMouseDown = this.onMouseDown;\n      }\n\n      if (restProps.value != null) {\n        changedProps.value = this.value;\n      }\n    }\n\n    inputElement = React.cloneElement(inputElement, changedProps);\n    return inputElement;\n  };\n\n  return InputElement;\n}(React.Component);\n\nmodule.exports = InputElement;","map":{"version":3,"sources":["/home/bebeto/Documentos/MDS/ObraCerta/front/node_modules/react-input-mask/lib/react-input-mask.development.js"],"names":["_interopDefault","ex","React","require","reactDom","invariant","warning","_defaults2","obj","defaults","keys","Object","getOwnPropertyNames","i","length","key","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_extends","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_assertThisInitialized","self","ReferenceError","setInputSelection","input","start","end","selectionStart","selectionEnd","range","createTextRange","collapse","moveStart","moveEnd","select","getInputSelection","document","selection","createRange","parentElement","defaultFormatChars","defaultMaskChar","parseMask","mask","maskChar","formatChars","parsedMaskString","prefix","lastEditablePosition","permanents","isPermanent","split","forEach","character","push","isPermanentCharacter","maskOptions","pos","isAllowedCharacter","ruleChar","charRule","RegExp","test","isEmpty","every","getFilledLength","slice","filledLength","isEnteredCharacter","isFilled","formatValue","insertString","emptyValue","clearRange","len","arrayValue","Math","max","splice","join","map","insertStr","insertPosition","arrayInsertStr","isInputFilled","isUsablePosition","isUsableCharacter","insertCharacter","isAllowed","getInsertStringLength","initialInsertPosition","getLeftEditablePosition","getRightEditablePosition","getStringValue","processChange","previousValue","previousSelection","newValue","enteredString","formattedEnteredStringLength","removedLength","cursorPosition","min","deleteFromRight","isWindowsPhoneBrowser","windows","phone","ua","navigator","userAgent","isFunction","getRequestAnimationFrame","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","getCancelAnimationFrame","cancelAnimationFrame","webkitCancelRequestAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","defer","fn","hasCancelAnimationFrame","deferFn","setTimeout","cancelDefer","deferId","cancelFn","clearTimeout","InputElement","_React$Component","props","_this","focused","mounted","selectionDeferId","saveSelectionLoopDeferId","saveSelectionLoop","getSelection","runSaveSelectionLoop","stopSaveSelectionLoop","getInputDOMNode","findDOMNode","isDOMNode","Element","nodeName","querySelector","Error","getInputValue","setInputValue","setCursorToEnd","setCursorPosition","setSelection","options","isFocused","_options","deferred","abs","getCursorPosition","getBeforeMaskedValueChangeConfig","_this$maskOptions","alwaysShowMask","isInputAutofilled","matches","e","onChange","event","_assertThisInitialize","beforePasteState","_assertThisInitialize2","beforeMaskedValueChange","changedState","newSelection","modifiedValue","onFocus","_this$maskOptions2","isInputValueChanged","onBlur","onMouseDown","addEventListener","mouseDownX","clientX","mouseDownY","clientY","mouseDownTime","Date","getTime","mouseUpHandler","mouseUpEvent","removeEventListener","deltaX","deltaY","axisDelta","timeDelta","onPaste","defaultPrevented","handleRef","ref","children","inputRef","_mask","_maskChar","_formatChars","_alwaysShowMask","_beforeMaskedValueChange","defaultValue","_value","_newValue","oldValue","_proto","componentDidMount","componentDidUpdate","_this$props","previousMaskOptions","showEmpty","hasValue","forceUpdate","isMaskChanged","isValueChanged","isSelectionChanged","componentWillUnmount","render","_this$props2","restProps","inputElement","process","env","NODE_ENV","maxLength","controlledProps","childrenProps","propId","conflictProps","filter","createElement","changedProps","disabled","readOnly","cloneElement","Component","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = _interopDefault(require('react'));\nvar reactDom = require('react-dom');\nvar invariant = _interopDefault(require('invariant'));\nvar warning = _interopDefault(require('warning'));\n\nfunction _defaults2(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _defaults2(subClass, superClass);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction setInputSelection(input, start, end) {\n  if ('selectionStart' in input && 'selectionEnd' in input) {\n    input.selectionStart = start;\n    input.selectionEnd = end;\n  } else {\n    var range = input.createTextRange();\n    range.collapse(true);\n    range.moveStart('character', start);\n    range.moveEnd('character', end - start);\n    range.select();\n  }\n}\nfunction getInputSelection(input) {\n  var start = 0;\n  var end = 0;\n\n  if ('selectionStart' in input && 'selectionEnd' in input) {\n    start = input.selectionStart;\n    end = input.selectionEnd;\n  } else {\n    var range = document.selection.createRange();\n\n    if (range.parentElement() === input) {\n      start = -range.moveStart('character', -input.value.length);\n      end = -range.moveEnd('character', -input.value.length);\n    }\n  }\n\n  return {\n    start: start,\n    end: end,\n    length: end - start\n  };\n}\n\nvar defaultFormatChars = {\n  '9': '[0-9]',\n  'a': '[A-Za-z]',\n  '*': '[A-Za-z0-9]'\n};\nvar defaultMaskChar = '_';\n\nfunction parseMask (mask, maskChar, formatChars) {\n  var parsedMaskString = '';\n  var prefix = '';\n  var lastEditablePosition = null;\n  var permanents = [];\n\n  if (maskChar === undefined) {\n    maskChar = defaultMaskChar;\n  }\n\n  if (formatChars == null) {\n    formatChars = defaultFormatChars;\n  }\n\n  if (!mask || typeof mask !== 'string') {\n    return {\n      maskChar: maskChar,\n      formatChars: formatChars,\n      mask: null,\n      prefix: null,\n      lastEditablePosition: null,\n      permanents: []\n    };\n  }\n\n  var isPermanent = false;\n  mask.split('').forEach(function (character) {\n    if (!isPermanent && character === '\\\\') {\n      isPermanent = true;\n    } else {\n      if (isPermanent || !formatChars[character]) {\n        permanents.push(parsedMaskString.length);\n\n        if (parsedMaskString.length === permanents.length - 1) {\n          prefix += character;\n        }\n      } else {\n        lastEditablePosition = parsedMaskString.length + 1;\n      }\n\n      parsedMaskString += character;\n      isPermanent = false;\n    }\n  });\n  return {\n    maskChar: maskChar,\n    formatChars: formatChars,\n    prefix: prefix,\n    mask: parsedMaskString,\n    lastEditablePosition: lastEditablePosition,\n    permanents: permanents\n  };\n}\n\n/* eslint no-use-before-define: [\"error\", { functions: false }] */\nfunction isPermanentCharacter(maskOptions, pos) {\n  return maskOptions.permanents.indexOf(pos) !== -1;\n}\nfunction isAllowedCharacter(maskOptions, pos, character) {\n  var mask = maskOptions.mask,\n      formatChars = maskOptions.formatChars;\n\n  if (!character) {\n    return false;\n  }\n\n  if (isPermanentCharacter(maskOptions, pos)) {\n    return mask[pos] === character;\n  }\n\n  var ruleChar = mask[pos];\n  var charRule = formatChars[ruleChar];\n  return new RegExp(charRule).test(character);\n}\nfunction isEmpty(maskOptions, value) {\n  return value.split('').every(function (character, i) {\n    return isPermanentCharacter(maskOptions, i) || !isAllowedCharacter(maskOptions, i, character);\n  });\n}\nfunction getFilledLength(maskOptions, value) {\n  var maskChar = maskOptions.maskChar,\n      prefix = maskOptions.prefix;\n\n  if (!maskChar) {\n    while (value.length > prefix.length && isPermanentCharacter(maskOptions, value.length - 1)) {\n      value = value.slice(0, value.length - 1);\n    }\n\n    return value.length;\n  }\n\n  var filledLength = prefix.length;\n\n  for (var i = value.length; i >= prefix.length; i--) {\n    var character = value[i];\n    var isEnteredCharacter = !isPermanentCharacter(maskOptions, i) && isAllowedCharacter(maskOptions, i, character);\n\n    if (isEnteredCharacter) {\n      filledLength = i + 1;\n      break;\n    }\n  }\n\n  return filledLength;\n}\nfunction isFilled(maskOptions, value) {\n  return getFilledLength(maskOptions, value) === maskOptions.mask.length;\n}\nfunction formatValue(maskOptions, value) {\n  var maskChar = maskOptions.maskChar,\n      mask = maskOptions.mask,\n      prefix = maskOptions.prefix;\n\n  if (!maskChar) {\n    value = insertString(maskOptions, '', value, 0);\n\n    if (value.length < prefix.length) {\n      value = prefix;\n    }\n\n    while (value.length < mask.length && isPermanentCharacter(maskOptions, value.length)) {\n      value += mask[value.length];\n    }\n\n    return value;\n  }\n\n  if (value) {\n    var emptyValue = formatValue(maskOptions, '');\n    return insertString(maskOptions, emptyValue, value, 0);\n  }\n\n  for (var i = 0; i < mask.length; i++) {\n    if (isPermanentCharacter(maskOptions, i)) {\n      value += mask[i];\n    } else {\n      value += maskChar;\n    }\n  }\n\n  return value;\n}\nfunction clearRange(maskOptions, value, start, len) {\n  var end = start + len;\n  var maskChar = maskOptions.maskChar,\n      mask = maskOptions.mask,\n      prefix = maskOptions.prefix;\n  var arrayValue = value.split('');\n\n  if (!maskChar) {\n    // remove any permanent chars after clear range, they will be added back by formatValue\n    for (var i = end; i < arrayValue.length; i++) {\n      if (isPermanentCharacter(maskOptions, i)) {\n        arrayValue[i] = '';\n      }\n    }\n\n    start = Math.max(prefix.length, start);\n    arrayValue.splice(start, end - start);\n    value = arrayValue.join('');\n    return formatValue(maskOptions, value);\n  }\n\n  return arrayValue.map(function (character, i) {\n    if (i < start || i >= end) {\n      return character;\n    }\n\n    if (isPermanentCharacter(maskOptions, i)) {\n      return mask[i];\n    }\n\n    return maskChar;\n  }).join('');\n}\nfunction insertString(maskOptions, value, insertStr, insertPosition) {\n  var mask = maskOptions.mask,\n      maskChar = maskOptions.maskChar,\n      prefix = maskOptions.prefix;\n  var arrayInsertStr = insertStr.split('');\n  var isInputFilled = isFilled(maskOptions, value);\n\n  var isUsablePosition = function isUsablePosition(pos, character) {\n    return !isPermanentCharacter(maskOptions, pos) || character === mask[pos];\n  };\n\n  var isUsableCharacter = function isUsableCharacter(character, pos) {\n    return !maskChar || !isPermanentCharacter(maskOptions, pos) || character !== maskChar;\n  };\n\n  if (!maskChar && insertPosition > value.length) {\n    value += mask.slice(value.length, insertPosition);\n  }\n\n  arrayInsertStr.every(function (insertCharacter) {\n    while (!isUsablePosition(insertPosition, insertCharacter)) {\n      if (insertPosition >= value.length) {\n        value += mask[insertPosition];\n      }\n\n      if (!isUsableCharacter(insertCharacter, insertPosition)) {\n        return true;\n      }\n\n      insertPosition++; // stop iteration if maximum value length reached\n\n      if (insertPosition >= mask.length) {\n        return false;\n      }\n    }\n\n    var isAllowed = isAllowedCharacter(maskOptions, insertPosition, insertCharacter) || insertCharacter === maskChar;\n\n    if (!isAllowed) {\n      return true;\n    }\n\n    if (insertPosition < value.length) {\n      if (maskChar || isInputFilled || insertPosition < prefix.length) {\n        value = value.slice(0, insertPosition) + insertCharacter + value.slice(insertPosition + 1);\n      } else {\n        value = value.slice(0, insertPosition) + insertCharacter + value.slice(insertPosition);\n        value = formatValue(maskOptions, value);\n      }\n    } else if (!maskChar) {\n      value += insertCharacter;\n    }\n\n    insertPosition++; // stop iteration if maximum value length reached\n\n    return insertPosition < mask.length;\n  });\n  return value;\n}\nfunction getInsertStringLength(maskOptions, value, insertStr, insertPosition) {\n  var mask = maskOptions.mask,\n      maskChar = maskOptions.maskChar;\n  var arrayInsertStr = insertStr.split('');\n  var initialInsertPosition = insertPosition;\n\n  var isUsablePosition = function isUsablePosition(pos, character) {\n    return !isPermanentCharacter(maskOptions, pos) || character === mask[pos];\n  };\n\n  arrayInsertStr.every(function (insertCharacter) {\n    while (!isUsablePosition(insertPosition, insertCharacter)) {\n      insertPosition++; // stop iteration if maximum value length reached\n\n      if (insertPosition >= mask.length) {\n        return false;\n      }\n    }\n\n    var isAllowed = isAllowedCharacter(maskOptions, insertPosition, insertCharacter) || insertCharacter === maskChar;\n\n    if (isAllowed) {\n      insertPosition++;\n    } // stop iteration if maximum value length reached\n\n\n    return insertPosition < mask.length;\n  });\n  return insertPosition - initialInsertPosition;\n}\nfunction getLeftEditablePosition(maskOptions, pos) {\n  for (var i = pos; i >= 0; --i) {\n    if (!isPermanentCharacter(maskOptions, i)) {\n      return i;\n    }\n  }\n\n  return null;\n}\nfunction getRightEditablePosition(maskOptions, pos) {\n  var mask = maskOptions.mask;\n\n  for (var i = pos; i < mask.length; ++i) {\n    if (!isPermanentCharacter(maskOptions, i)) {\n      return i;\n    }\n  }\n\n  return null;\n}\nfunction getStringValue(value) {\n  return !value && value !== 0 ? '' : value + '';\n}\n\nfunction processChange(maskOptions, value, selection, previousValue, previousSelection) {\n  var mask = maskOptions.mask,\n      prefix = maskOptions.prefix,\n      lastEditablePosition = maskOptions.lastEditablePosition;\n  var newValue = value;\n  var enteredString = '';\n  var formattedEnteredStringLength = 0;\n  var removedLength = 0;\n  var cursorPosition = Math.min(previousSelection.start, selection.start);\n\n  if (selection.end > previousSelection.start) {\n    enteredString = newValue.slice(previousSelection.start, selection.end);\n    formattedEnteredStringLength = getInsertStringLength(maskOptions, previousValue, enteredString, cursorPosition);\n\n    if (!formattedEnteredStringLength) {\n      removedLength = 0;\n    } else {\n      removedLength = previousSelection.length;\n    }\n  } else if (newValue.length < previousValue.length) {\n    removedLength = previousValue.length - newValue.length;\n  }\n\n  newValue = previousValue;\n\n  if (removedLength) {\n    if (removedLength === 1 && !previousSelection.length) {\n      var deleteFromRight = previousSelection.start === selection.start;\n      cursorPosition = deleteFromRight ? getRightEditablePosition(maskOptions, selection.start) : getLeftEditablePosition(maskOptions, selection.start);\n    }\n\n    newValue = clearRange(maskOptions, newValue, cursorPosition, removedLength);\n  }\n\n  newValue = insertString(maskOptions, newValue, enteredString, cursorPosition);\n  cursorPosition = cursorPosition + formattedEnteredStringLength;\n\n  if (cursorPosition >= mask.length) {\n    cursorPosition = mask.length;\n  } else if (cursorPosition < prefix.length && !formattedEnteredStringLength) {\n    cursorPosition = prefix.length;\n  } else if (cursorPosition >= prefix.length && cursorPosition < lastEditablePosition && formattedEnteredStringLength) {\n    cursorPosition = getRightEditablePosition(maskOptions, cursorPosition);\n  }\n\n  newValue = formatValue(maskOptions, newValue);\n\n  if (!enteredString) {\n    enteredString = null;\n  }\n\n  return {\n    value: newValue,\n    enteredString: enteredString,\n    selection: {\n      start: cursorPosition,\n      end: cursorPosition\n    }\n  };\n}\n\nfunction isWindowsPhoneBrowser() {\n  var windows = new RegExp('windows', 'i');\n  var phone = new RegExp('phone', 'i');\n  var ua = navigator.userAgent;\n  return windows.test(ua) && phone.test(ua);\n}\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nfunction getRequestAnimationFrame() {\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n}\n\nfunction getCancelAnimationFrame() {\n  return window.cancelAnimationFrame || window.webkitCancelRequestAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame;\n}\n\nfunction defer(fn) {\n  var hasCancelAnimationFrame = !!getCancelAnimationFrame();\n  var deferFn;\n\n  if (hasCancelAnimationFrame) {\n    deferFn = getRequestAnimationFrame();\n  } else {\n    deferFn = function deferFn() {\n      return setTimeout(fn, 1000 / 60);\n    };\n  }\n\n  return deferFn(fn);\n}\nfunction cancelDefer(deferId) {\n  var cancelFn = getCancelAnimationFrame() || clearTimeout;\n  cancelFn(deferId);\n}\n\nvar InputElement =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InputElement, _React$Component);\n\n  function InputElement(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.focused = false;\n    _this.mounted = false;\n    _this.previousSelection = null;\n    _this.selectionDeferId = null;\n    _this.saveSelectionLoopDeferId = null;\n\n    _this.saveSelectionLoop = function () {\n      _this.previousSelection = _this.getSelection();\n      _this.saveSelectionLoopDeferId = defer(_this.saveSelectionLoop);\n    };\n\n    _this.runSaveSelectionLoop = function () {\n      if (_this.saveSelectionLoopDeferId === null) {\n        _this.saveSelectionLoop();\n      }\n    };\n\n    _this.stopSaveSelectionLoop = function () {\n      if (_this.saveSelectionLoopDeferId !== null) {\n        cancelDefer(_this.saveSelectionLoopDeferId);\n        _this.saveSelectionLoopDeferId = null;\n        _this.previousSelection = null;\n      }\n    };\n\n    _this.getInputDOMNode = function () {\n      if (!_this.mounted) {\n        return null;\n      }\n\n      var input = reactDom.findDOMNode(_assertThisInitialized(_assertThisInitialized(_this)));\n      var isDOMNode = typeof window !== 'undefined' && input instanceof window.Element; // workaround for react-test-renderer\n      // https://github.com/sanniassin/react-input-mask/issues/147\n\n      if (input && !isDOMNode) {\n        return null;\n      }\n\n      if (input.nodeName !== 'INPUT') {\n        input = input.querySelector('input');\n      }\n\n      if (!input) {\n        throw new Error('react-input-mask: inputComponent doesn\\'t contain input node');\n      }\n\n      return input;\n    };\n\n    _this.getInputValue = function () {\n      var input = _this.getInputDOMNode();\n\n      if (!input) {\n        return null;\n      }\n\n      return input.value;\n    };\n\n    _this.setInputValue = function (value) {\n      var input = _this.getInputDOMNode();\n\n      if (!input) {\n        return;\n      }\n\n      _this.value = value;\n      input.value = value;\n    };\n\n    _this.setCursorToEnd = function () {\n      var filledLength = getFilledLength(_this.maskOptions, _this.value);\n      var pos = getRightEditablePosition(_this.maskOptions, filledLength);\n\n      if (pos !== null) {\n        _this.setCursorPosition(pos);\n      }\n    };\n\n    _this.setSelection = function (start, end, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var input = _this.getInputDOMNode();\n\n      var isFocused = _this.isFocused(); // don't change selection on unfocused input\n      // because Safari sets focus on selection change (#154)\n\n\n      if (!input || !isFocused) {\n        return;\n      }\n\n      var _options = options,\n          deferred = _options.deferred;\n\n      if (!deferred) {\n        setInputSelection(input, start, end);\n      }\n\n      if (_this.selectionDeferId !== null) {\n        cancelDefer(_this.selectionDeferId);\n      } // deferred selection update is required for pre-Lollipop Android browser,\n      // but for consistent behavior we do it for all browsers\n\n\n      _this.selectionDeferId = defer(function () {\n        _this.selectionDeferId = null;\n        setInputSelection(input, start, end);\n      });\n      _this.previousSelection = {\n        start: start,\n        end: end,\n        length: Math.abs(end - start)\n      };\n    };\n\n    _this.getSelection = function () {\n      var input = _this.getInputDOMNode();\n\n      return getInputSelection(input);\n    };\n\n    _this.getCursorPosition = function () {\n      return _this.getSelection().start;\n    };\n\n    _this.setCursorPosition = function (pos) {\n      _this.setSelection(pos, pos);\n    };\n\n    _this.isFocused = function () {\n      return _this.focused;\n    };\n\n    _this.getBeforeMaskedValueChangeConfig = function () {\n      var _this$maskOptions = _this.maskOptions,\n          mask = _this$maskOptions.mask,\n          maskChar = _this$maskOptions.maskChar,\n          permanents = _this$maskOptions.permanents,\n          formatChars = _this$maskOptions.formatChars;\n      var alwaysShowMask = _this.props.alwaysShowMask;\n      return {\n        mask: mask,\n        maskChar: maskChar,\n        permanents: permanents,\n        alwaysShowMask: !!alwaysShowMask,\n        formatChars: formatChars\n      };\n    };\n\n    _this.isInputAutofilled = function (value, selection, previousValue, previousSelection) {\n      var input = _this.getInputDOMNode(); // only check for positive match because it will be false negative\n      // in case of autofill simulation in tests\n      //\n      // input.matches throws an exception if selector isn't supported\n\n\n      try {\n        if (input.matches(':-webkit-autofill')) {\n          return true;\n        }\n      } catch (e) {} // if input isn't focused then change event must have been triggered\n      // either by autofill or event simulation in tests\n\n\n      if (!_this.focused) {\n        return true;\n      } // if cursor has moved to the end while previousSelection forbids it\n      // then it must be autofill\n\n\n      return previousSelection.end < previousValue.length && selection.end === value.length;\n    };\n\n    _this.onChange = function (event) {\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n          beforePasteState = _assertThisInitialize.beforePasteState;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_assertThisInitialized(_this)),\n          previousSelection = _assertThisInitialize2.previousSelection;\n\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n\n      var value = _this.getInputValue();\n\n      var previousValue = _this.value;\n\n      var selection = _this.getSelection(); // autofill replaces entire value, ignore old one\n      // https://github.com/sanniassin/react-input-mask/issues/113\n\n\n      if (_this.isInputAutofilled(value, selection, previousValue, previousSelection)) {\n        previousValue = formatValue(_this.maskOptions, '');\n        previousSelection = {\n          start: 0,\n          end: 0,\n          length: 0\n        };\n      } // set value and selection as if we haven't\n      // cleared input in onPaste handler\n\n\n      if (beforePasteState) {\n        previousSelection = beforePasteState.selection;\n        previousValue = beforePasteState.value;\n        selection = {\n          start: previousSelection.start + value.length,\n          end: previousSelection.start + value.length,\n          length: 0\n        };\n        value = previousValue.slice(0, previousSelection.start) + value + previousValue.slice(previousSelection.end);\n        _this.beforePasteState = null;\n      }\n\n      var changedState = processChange(_this.maskOptions, value, selection, previousValue, previousSelection);\n      var enteredString = changedState.enteredString;\n      var newSelection = changedState.selection;\n      var newValue = changedState.value;\n\n      if (isFunction(beforeMaskedValueChange)) {\n        var modifiedValue = beforeMaskedValueChange({\n          value: newValue,\n          selection: newSelection\n        }, {\n          value: previousValue,\n          selection: previousSelection\n        }, enteredString, _this.getBeforeMaskedValueChangeConfig());\n        newValue = modifiedValue.value;\n        newSelection = modifiedValue.selection;\n      }\n\n      _this.setInputValue(newValue);\n\n      if (isFunction(_this.props.onChange)) {\n        _this.props.onChange(event);\n      }\n\n      if (_this.isWindowsPhoneBrowser) {\n        _this.setSelection(newSelection.start, newSelection.end, {\n          deferred: true\n        });\n      } else {\n        _this.setSelection(newSelection.start, newSelection.end);\n      }\n    };\n\n    _this.onFocus = function (event) {\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n      var _this$maskOptions2 = _this.maskOptions,\n          mask = _this$maskOptions2.mask,\n          prefix = _this$maskOptions2.prefix;\n      _this.focused = true; // if autoFocus is set, onFocus triggers before componentDidMount\n\n      _this.mounted = true;\n\n      if (mask) {\n        if (!_this.value) {\n          var emptyValue = formatValue(_this.maskOptions, prefix);\n          var newValue = formatValue(_this.maskOptions, emptyValue);\n          var filledLength = getFilledLength(_this.maskOptions, newValue);\n          var cursorPosition = getRightEditablePosition(_this.maskOptions, filledLength);\n          var newSelection = {\n            start: cursorPosition,\n            end: cursorPosition\n          };\n\n          if (isFunction(beforeMaskedValueChange)) {\n            var modifiedValue = beforeMaskedValueChange({\n              value: newValue,\n              selection: newSelection\n            }, {\n              value: _this.value,\n              selection: null\n            }, null, _this.getBeforeMaskedValueChangeConfig());\n            newValue = modifiedValue.value;\n            newSelection = modifiedValue.selection;\n          }\n\n          var isInputValueChanged = newValue !== _this.getInputValue();\n\n          if (isInputValueChanged) {\n            _this.setInputValue(newValue);\n          }\n\n          if (isInputValueChanged && isFunction(_this.props.onChange)) {\n            _this.props.onChange(event);\n          }\n\n          _this.setSelection(newSelection.start, newSelection.end);\n        } else if (getFilledLength(_this.maskOptions, _this.value) < _this.maskOptions.mask.length) {\n          _this.setCursorToEnd();\n        }\n\n        _this.runSaveSelectionLoop();\n      }\n\n      if (isFunction(_this.props.onFocus)) {\n        _this.props.onFocus(event);\n      }\n    };\n\n    _this.onBlur = function (event) {\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n      var mask = _this.maskOptions.mask;\n\n      _this.stopSaveSelectionLoop();\n\n      _this.focused = false;\n\n      if (mask && !_this.props.alwaysShowMask && isEmpty(_this.maskOptions, _this.value)) {\n        var newValue = '';\n\n        if (isFunction(beforeMaskedValueChange)) {\n          var modifiedValue = beforeMaskedValueChange({\n            value: newValue,\n            selection: null\n          }, {\n            value: _this.value,\n            selection: _this.previousSelection\n          }, null, _this.getBeforeMaskedValueChangeConfig());\n          newValue = modifiedValue.value;\n        }\n\n        var isInputValueChanged = newValue !== _this.getInputValue();\n\n        if (isInputValueChanged) {\n          _this.setInputValue(newValue);\n        }\n\n        if (isInputValueChanged && isFunction(_this.props.onChange)) {\n          _this.props.onChange(event);\n        }\n      }\n\n      if (isFunction(_this.props.onBlur)) {\n        _this.props.onBlur(event);\n      }\n    };\n\n    _this.onMouseDown = function (event) {\n      // tiny unintentional mouse movements can break cursor\n      // position on focus, so we have to restore it in that case\n      //\n      // https://github.com/sanniassin/react-input-mask/issues/108\n      if (!_this.focused && document.addEventListener) {\n        _this.mouseDownX = event.clientX;\n        _this.mouseDownY = event.clientY;\n        _this.mouseDownTime = new Date().getTime();\n\n        var mouseUpHandler = function mouseUpHandler(mouseUpEvent) {\n          document.removeEventListener('mouseup', mouseUpHandler);\n\n          if (!_this.focused) {\n            return;\n          }\n\n          var deltaX = Math.abs(mouseUpEvent.clientX - _this.mouseDownX);\n          var deltaY = Math.abs(mouseUpEvent.clientY - _this.mouseDownY);\n          var axisDelta = Math.max(deltaX, deltaY);\n\n          var timeDelta = new Date().getTime() - _this.mouseDownTime;\n\n          if (axisDelta <= 10 && timeDelta <= 200 || axisDelta <= 5 && timeDelta <= 300) {\n            _this.setCursorToEnd();\n          }\n        };\n\n        document.addEventListener('mouseup', mouseUpHandler);\n      }\n\n      if (isFunction(_this.props.onMouseDown)) {\n        _this.props.onMouseDown(event);\n      }\n    };\n\n    _this.onPaste = function (event) {\n      if (isFunction(_this.props.onPaste)) {\n        _this.props.onPaste(event);\n      } // event.clipboardData might not work in Android browser\n      // cleaning input to get raw text inside onChange handler\n\n\n      if (!event.defaultPrevented) {\n        _this.beforePasteState = {\n          value: _this.getInputValue(),\n          selection: _this.getSelection()\n        };\n\n        _this.setInputValue('');\n      }\n    };\n\n    _this.handleRef = function (ref) {\n      if (_this.props.children == null && isFunction(_this.props.inputRef)) {\n        _this.props.inputRef(ref);\n      }\n    };\n\n    var _mask = props.mask,\n        _maskChar = props.maskChar,\n        _formatChars = props.formatChars,\n        _alwaysShowMask = props.alwaysShowMask,\n        _beforeMaskedValueChange = props.beforeMaskedValueChange;\n    var defaultValue = props.defaultValue,\n        _value = props.value;\n    _this.maskOptions = parseMask(_mask, _maskChar, _formatChars);\n\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n\n    if (_value == null) {\n      _value = defaultValue;\n    }\n\n    var _newValue = getStringValue(_value);\n\n    if (_this.maskOptions.mask && (_alwaysShowMask || _newValue)) {\n      _newValue = formatValue(_this.maskOptions, _newValue);\n\n      if (isFunction(_beforeMaskedValueChange)) {\n        var oldValue = props.value;\n\n        if (props.value == null) {\n          oldValue = defaultValue;\n        }\n\n        oldValue = getStringValue(oldValue);\n\n        var modifiedValue = _beforeMaskedValueChange({\n          value: _newValue,\n          selection: null\n        }, {\n          value: oldValue,\n          selection: null\n        }, null, _this.getBeforeMaskedValueChangeConfig());\n\n        _newValue = modifiedValue.value;\n      }\n    }\n\n    _this.value = _newValue;\n    return _this;\n  }\n\n  var _proto = InputElement.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true; // workaround for react-test-renderer\n    // https://github.com/sanniassin/react-input-mask/issues/147\n\n    if (!this.getInputDOMNode()) {\n      return;\n    }\n\n    this.isWindowsPhoneBrowser = isWindowsPhoneBrowser();\n\n    if (this.maskOptions.mask && this.getInputValue() !== this.value) {\n      this.setInputValue(this.value);\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var previousSelection = this.previousSelection;\n    var _this$props = this.props,\n        beforeMaskedValueChange = _this$props.beforeMaskedValueChange,\n        alwaysShowMask = _this$props.alwaysShowMask,\n        mask = _this$props.mask,\n        maskChar = _this$props.maskChar,\n        formatChars = _this$props.formatChars;\n    var previousMaskOptions = this.maskOptions;\n    var showEmpty = alwaysShowMask || this.isFocused();\n    var hasValue = this.props.value != null;\n    var newValue = hasValue ? getStringValue(this.props.value) : this.value;\n    var cursorPosition = previousSelection ? previousSelection.start : null;\n    this.maskOptions = parseMask(mask, maskChar, formatChars);\n\n    if (!this.maskOptions.mask) {\n      if (previousMaskOptions.mask) {\n        this.stopSaveSelectionLoop(); // render depends on this.maskOptions and this.value,\n        // call forceUpdate to keep it in sync\n\n        this.forceUpdate();\n      }\n\n      return;\n    } else if (!previousMaskOptions.mask && this.isFocused()) {\n      this.runSaveSelectionLoop();\n    }\n\n    var isMaskChanged = this.maskOptions.mask && this.maskOptions.mask !== previousMaskOptions.mask;\n\n    if (!previousMaskOptions.mask && !hasValue) {\n      newValue = this.getInputValue();\n    }\n\n    if (isMaskChanged || this.maskOptions.mask && (newValue || showEmpty)) {\n      newValue = formatValue(this.maskOptions, newValue);\n    }\n\n    if (isMaskChanged) {\n      var filledLength = getFilledLength(this.maskOptions, newValue);\n\n      if (cursorPosition === null || filledLength < cursorPosition) {\n        if (isFilled(this.maskOptions, newValue)) {\n          cursorPosition = filledLength;\n        } else {\n          cursorPosition = getRightEditablePosition(this.maskOptions, filledLength);\n        }\n      }\n    }\n\n    if (this.maskOptions.mask && isEmpty(this.maskOptions, newValue) && !showEmpty && (!hasValue || !this.props.value)) {\n      newValue = '';\n    }\n\n    var newSelection = {\n      start: cursorPosition,\n      end: cursorPosition\n    };\n\n    if (isFunction(beforeMaskedValueChange)) {\n      var modifiedValue = beforeMaskedValueChange({\n        value: newValue,\n        selection: newSelection\n      }, {\n        value: this.value,\n        selection: this.previousSelection\n      }, null, this.getBeforeMaskedValueChangeConfig());\n      newValue = modifiedValue.value;\n      newSelection = modifiedValue.selection;\n    }\n\n    this.value = newValue;\n    var isValueChanged = this.getInputValue() !== this.value; // render depends on this.maskOptions and this.value,\n    // call forceUpdate to keep it in sync\n\n    if (isValueChanged) {\n      this.setInputValue(this.value);\n      this.forceUpdate();\n    } else if (isMaskChanged) {\n      this.forceUpdate();\n    }\n\n    var isSelectionChanged = false;\n\n    if (newSelection.start != null && newSelection.end != null) {\n      isSelectionChanged = !previousSelection || previousSelection.start !== newSelection.start || previousSelection.end !== newSelection.end;\n    }\n\n    if (isSelectionChanged || isValueChanged) {\n      this.setSelection(newSelection.start, newSelection.end);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n\n    if (this.selectionDeferId !== null) {\n      cancelDefer(this.selectionDeferId);\n    }\n\n    this.stopSaveSelectionLoop();\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        mask = _this$props2.mask,\n        alwaysShowMask = _this$props2.alwaysShowMask,\n        maskChar = _this$props2.maskChar,\n        formatChars = _this$props2.formatChars,\n        inputRef = _this$props2.inputRef,\n        beforeMaskedValueChange = _this$props2.beforeMaskedValueChange,\n        children = _this$props2.children,\n        restProps = _objectWithoutPropertiesLoose(_this$props2, [\"mask\", \"alwaysShowMask\", \"maskChar\", \"formatChars\", \"inputRef\", \"beforeMaskedValueChange\", \"children\"]);\n\n    var inputElement;\n    process.env.NODE_ENV !== \"production\" ? warning( // parse mask to test against actual mask prop as this.maskOptions\n    // will be updated later in componentDidUpdate\n    !restProps.maxLength || !parseMask(mask, maskChar, formatChars).mask, 'react-input-mask: maxLength property shouldn\\'t be passed to the masked input. It breaks masking and unnecessary because length is limited by the mask length.') : void 0;\n\n    if (children) {\n      !isFunction(children) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'react-input-mask: children must be a function') : invariant(false) : void 0;\n      var controlledProps = ['onChange', 'onPaste', 'onMouseDown', 'onFocus', 'onBlur', 'value', 'disabled', 'readOnly'];\n\n      var childrenProps = _extends({}, restProps);\n\n      controlledProps.forEach(function (propId) {\n        return delete childrenProps[propId];\n      });\n      inputElement = children(childrenProps);\n      var conflictProps = controlledProps.filter(function (propId) {\n        return inputElement.props[propId] != null && inputElement.props[propId] !== restProps[propId];\n      });\n      !!conflictProps.length ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-input-mask: the following props should be passed to the react-input-mask's component and should not be altered in children's function: \" + conflictProps.join(', ')) : invariant(false) : void 0;\n      process.env.NODE_ENV !== \"production\" ? warning(!inputRef, 'react-input-mask: inputRef is ignored when children is passed, attach ref to the children instead') : void 0;\n    } else {\n      inputElement = React.createElement(\"input\", _extends({\n        ref: this.handleRef\n      }, restProps));\n    }\n\n    var changedProps = {\n      onFocus: this.onFocus,\n      onBlur: this.onBlur\n    };\n\n    if (this.maskOptions.mask) {\n      if (!restProps.disabled && !restProps.readOnly) {\n        changedProps.onChange = this.onChange;\n        changedProps.onPaste = this.onPaste;\n        changedProps.onMouseDown = this.onMouseDown;\n      }\n\n      if (restProps.value != null) {\n        changedProps.value = this.value;\n      }\n    }\n\n    inputElement = React.cloneElement(inputElement, changedProps);\n    return inputElement;\n  };\n\n  return InputElement;\n}(React.Component);\n\nmodule.exports = InputElement;\n"]},"metadata":{},"sourceType":"script"}