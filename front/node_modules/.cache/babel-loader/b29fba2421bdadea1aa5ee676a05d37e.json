{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport { once } from './utils';\nexport var Events = function Events(config) {\n  var _this = this;\n\n  _classCallCheck(this, Events);\n\n  this.start = null;\n  this.interrupt = null;\n  this.end = null;\n\n  if (config.events) {\n    Object.keys(config.events).forEach(function (d) {\n      if (typeof config.events[d] !== 'function') {\n        throw new Error('Event handlers must be a function');\n      } else {\n        _this[d] = once(config.events[d]);\n      }\n    });\n  }\n};\nexport default Events;","map":{"version":3,"sources":["/home/bebeto/Documentos/MDS/ObraCerta/front/node_modules/kapellmeister/es/Events.js"],"names":["_classCallCheck","instance","Constructor","TypeError","once","Events","config","_this","start","interrupt","end","events","Object","keys","forEach","d","Error"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,IAAT,QAAqB,SAArB;AACA,OAAO,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,MAAhB,EAAwB;AAC1C,MAAIC,KAAK,GAAG,IAAZ;;AAEAP,EAAAA,eAAe,CAAC,IAAD,EAAOK,MAAP,CAAf;;AAEA,OAAKG,KAAL,GAAa,IAAb;AACA,OAAKC,SAAL,GAAiB,IAAjB;AACA,OAAKC,GAAL,GAAW,IAAX;;AAEA,MAAIJ,MAAM,CAACK,MAAX,EAAmB;AACjBC,IAAAA,MAAM,CAACC,IAAP,CAAYP,MAAM,CAACK,MAAnB,EAA2BG,OAA3B,CAAmC,UAAUC,CAAV,EAAa;AAC9C,UAAI,OAAOT,MAAM,CAACK,MAAP,CAAcI,CAAd,CAAP,KAA4B,UAAhC,EAA4C;AAC1C,cAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;AACD,OAFD,MAEO;AACLT,QAAAA,KAAK,CAACQ,CAAD,CAAL,GAAWX,IAAI,CAACE,MAAM,CAACK,MAAP,CAAcI,CAAd,CAAD,CAAf;AACD;AACF,KAND;AAOD;AACF,CAlBM;AAmBP,eAAeV,MAAf","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { once } from './utils';\nexport var Events = function Events(config) {\n  var _this = this;\n\n  _classCallCheck(this, Events);\n\n  this.start = null;\n  this.interrupt = null;\n  this.end = null;\n\n  if (config.events) {\n    Object.keys(config.events).forEach(function (d) {\n      if (typeof config.events[d] !== 'function') {\n        throw new Error('Event handlers must be a function');\n      } else {\n        _this[d] = once(config.events[d]);\n      }\n    });\n  }\n};\nexport default Events;"]},"metadata":{},"sourceType":"module"}