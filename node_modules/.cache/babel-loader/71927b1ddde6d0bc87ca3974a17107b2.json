{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cssLabels = cssLabels;\nexports.default = parse;\n\nvar _flatten = require('./flatten');\n\nvar _flatten2 = _interopRequireDefault(_flatten);\n\nvar _hash = require('./hash');\n\nvar _hash2 = _interopRequireDefault(_hash);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**** labels ****/\n// toggle for debug labels.\n// *shouldn't* have to mess with this manually\n// import clean from './clean';\n\n\nvar hasLabels = process.env.NODE_ENV !== 'production';\n\nfunction cssLabels(bool) {\n  hasLabels = !!bool;\n}\n\nvar prefixedPseudoSelectors = {\n  '::placeholder': ['::-webkit-input-placeholder', '::-moz-placeholder', '::-ms-input-placeholder'],\n  ':fullscreen': [':-webkit-full-screen', ':-moz-full-screen', ':-ms-fullscreen']\n};\n\nfunction isSelector(key) {\n  var possibles = [':', '.', '[', '>', ' '],\n      found = false,\n      ch = key.charAt(0);\n\n  for (var i = 0; i < possibles.length; i++) {\n    if (ch === possibles[i]) {\n      found = true;\n      break;\n    }\n  }\n\n  return found || key.indexOf('&') >= 0;\n} // from https://github.com/j2css/j2c/blob/5d381c2d721d04b54fabe6a165d587247c3087cb/src/helpers.js#L28-L61\n// \"Tokenizes\" the selectors into parts relevant for the next function.\n// Strings and comments are matched, but ignored afterwards.\n// This is not a full tokenizers. It only recognizes comas, parentheses,\n// strings and comments.\n// regexp generated by scripts/regexps.js then trimmed by hand\n\n\nvar selectorTokenizer = /[(),]|\"(?:\\\\.|[^\"\\n])*\"|'(?:\\\\.|[^'\\n])*'|\\/\\*[\\s\\S]*?\\*\\//g;\n/**\n * This will split a coma-separated selector list into individual selectors,\n * ignoring comas in strings, comments and in :pseudo-selectors(parameter, lists).\n *\n * @param {string} selector\n * @return {string[]}\n */\n\nfunction splitSelector(selector) {\n  if (selector.indexOf(',') === -1) {\n    return [selector];\n  }\n\n  var indices = [],\n      res = [],\n      inParen = 0,\n      o;\n  /*eslint-disable no-cond-assign*/\n\n  while (o = selectorTokenizer.exec(selector)) {\n    /*eslint-enable no-cond-assign*/\n    switch (o[0]) {\n      case '(':\n        inParen++;\n        break;\n\n      case ')':\n        inParen--;\n        break;\n\n      case ',':\n        if (inParen) break;\n        indices.push(o.index);\n    }\n  }\n\n  for (o = indices.length; o--;) {\n    res.unshift(selector.slice(indices[o] + 1));\n    selector = selector.slice(0, indices[o]);\n  }\n\n  res.unshift(selector);\n  return res;\n}\n\nfunction joinSelectors(a, b) {\n  var as = splitSelector(a).map(function (a) {\n    return !(a.indexOf('&') >= 0) ? '&' + a : a;\n  });\n  var bs = splitSelector(b).map(function (b) {\n    return !(b.indexOf('&') >= 0) ? '&' + b : b;\n  });\n  return bs.reduce(function (arr, b) {\n    return arr.concat(as.map(function (a) {\n      return b.replace(/\\&/g, a);\n    }));\n  }, []).join(',');\n}\n\nfunction joinMediaQueries(a, b) {\n  return a ? '@media ' + a.substring(6) + ' and ' + b.substring(6) : b;\n}\n\nfunction isMediaQuery(key) {\n  return key.indexOf('@media') === 0;\n}\n\nfunction isSupports(key) {\n  return key.indexOf('@supports') === 0;\n}\n\nfunction joinSupports(a, b) {\n  return a ? '@supports ' + a.substring(9) + ' and ' + b.substring(9) : b;\n} // mutable! modifies dest.\n\n\nfunction construct(dest, _ref) {\n  var _ref$selector = _ref.selector,\n      selector = _ref$selector === undefined ? '' : _ref$selector,\n      _ref$mq = _ref.mq,\n      mq = _ref$mq === undefined ? '' : _ref$mq,\n      _ref$supp = _ref.supp,\n      supp = _ref$supp === undefined ? '' : _ref$supp,\n      _ref$inputs = _ref.inputs,\n      inputs = _ref$inputs === undefined ? {} : _ref$inputs;\n  var inputArray = !Array.isArray(inputs) ? [inputs] : (0, _flatten2.default)(inputs);\n  inputArray.filter(function (x) {\n    return !!x;\n  }).forEach(function (input) {\n    var src = input;\n    Object.keys(src || {}).forEach(function (key) {\n      if (isSelector(key)) {\n        // todo - regex test the string to look for prefixedpseudos\n        if (prefixedPseudoSelectors[key]) {\n          prefixedPseudoSelectors[key].forEach(function (p) {\n            return construct(dest, {\n              selector: joinSelectors(selector, p),\n              mq: mq,\n              supp: supp,\n              inputs: src[key]\n            });\n          });\n        }\n\n        construct(dest, {\n          selector: joinSelectors(selector, key),\n          mq: mq,\n          supp: supp,\n          inputs: src[key]\n        });\n      } else if (isMediaQuery(key)) {\n        construct(dest, {\n          selector: selector,\n          mq: joinMediaQueries(mq, key),\n          supp: supp,\n          inputs: src[key]\n        });\n      } else if (isSupports(key)) {\n        construct(dest, {\n          selector: selector,\n          mq: mq,\n          supp: joinSupports(supp, key),\n          inputs: src[key]\n        });\n      } else {\n        var _dest = dest;\n\n        if (supp) {\n          _dest[supp] = _dest[supp] || {};\n          _dest = _dest[supp];\n        }\n\n        if (mq) {\n          _dest[mq] = _dest[mq] || {};\n          _dest = _dest[mq];\n        }\n\n        if (selector) {\n          _dest[selector] = _dest[selector] || {};\n          _dest = _dest[selector];\n        }\n\n        if (key === 'label') {\n          if (hasLabels) {\n            // concat at root of object\n            dest.label = dest.label.concat(src.label);\n          }\n        } else {\n          _dest[key] = src[key];\n        }\n      }\n    });\n  });\n  return dest;\n}\n\nfunction groupByType(style) {\n  // we can be sure it's not infinitely nested here\n  var plain = void 0,\n      selects = void 0,\n      medias = void 0,\n      supports = void 0;\n  Object.keys(style).forEach(function (key) {\n    if (key.indexOf('&') >= 0) {\n      selects = selects || {};\n      selects[key] = style[key];\n    } else if (key.indexOf('@media') === 0) {\n      medias = medias || {};\n      medias[key] = groupByType(style[key]);\n    } else if (key.indexOf('@supports') === 0) {\n      supports = supports || {};\n      supports[key] = groupByType(style[key]);\n    } else if (key === 'label') {\n      if (style.label.length > 0) {\n        plain = plain || {};\n        plain.label = hasLabels ? style.label.join('.') : '';\n      }\n    } else {\n      plain = plain || {};\n      plain[key] = style[key];\n    }\n  });\n  return {\n    plain: plain,\n    selects: selects,\n    medias: medias,\n    supports: supports\n  };\n}\n\nfunction parse(css) {\n  var parsed = groupByType(construct({\n    label: []\n  }, {\n    inputs: css\n  }));\n  var className = 'css-' + (0, _hash2.default)(parsed);\n  return {\n    className: className,\n    parsed: parsed\n  };\n}","map":{"version":3,"sources":["/home/matheus/Documents/UNB/MDS/ObraCerta/front/node_modules/glam/lib/parse.js"],"names":["Object","defineProperty","exports","value","cssLabels","default","parse","_flatten","require","_flatten2","_interopRequireDefault","_hash","_hash2","obj","__esModule","hasLabels","process","env","NODE_ENV","bool","prefixedPseudoSelectors","isSelector","key","possibles","found","ch","charAt","i","length","indexOf","selectorTokenizer","splitSelector","selector","indices","res","inParen","o","exec","push","index","unshift","slice","joinSelectors","a","b","as","map","bs","reduce","arr","concat","replace","join","joinMediaQueries","substring","isMediaQuery","isSupports","joinSupports","construct","dest","_ref","_ref$selector","undefined","_ref$mq","mq","_ref$supp","supp","_ref$inputs","inputs","inputArray","Array","isArray","filter","x","forEach","input","src","keys","p","_dest","label","groupByType","style","plain","selects","medias","supports","css","parsed","className"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cssLabels = cssLabels;\nexports.default = parse;\n\nvar _flatten = require('./flatten');\n\nvar _flatten2 = _interopRequireDefault(_flatten);\n\nvar _hash = require('./hash');\n\nvar _hash2 = _interopRequireDefault(_hash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**** labels ****/\n// toggle for debug labels.\n// *shouldn't* have to mess with this manually\n\n\n// import clean from './clean';\nvar hasLabels = process.env.NODE_ENV !== 'production';\n\nfunction cssLabels(bool) {\n  hasLabels = !!bool;\n}\n\nvar prefixedPseudoSelectors = {\n  '::placeholder': ['::-webkit-input-placeholder', '::-moz-placeholder', '::-ms-input-placeholder'],\n  ':fullscreen': [':-webkit-full-screen', ':-moz-full-screen', ':-ms-fullscreen']\n};\n\nfunction isSelector(key) {\n  var possibles = [':', '.', '[', '>', ' '],\n      found = false,\n      ch = key.charAt(0);\n  for (var i = 0; i < possibles.length; i++) {\n    if (ch === possibles[i]) {\n      found = true;\n      break;\n    }\n  }\n  return found || key.indexOf('&') >= 0;\n}\n// from https://github.com/j2css/j2c/blob/5d381c2d721d04b54fabe6a165d587247c3087cb/src/helpers.js#L28-L61\n\n// \"Tokenizes\" the selectors into parts relevant for the next function.\n// Strings and comments are matched, but ignored afterwards.\n// This is not a full tokenizers. It only recognizes comas, parentheses,\n// strings and comments.\n// regexp generated by scripts/regexps.js then trimmed by hand\nvar selectorTokenizer = /[(),]|\"(?:\\\\.|[^\"\\n])*\"|'(?:\\\\.|[^'\\n])*'|\\/\\*[\\s\\S]*?\\*\\//g;\n\n/**\n * This will split a coma-separated selector list into individual selectors,\n * ignoring comas in strings, comments and in :pseudo-selectors(parameter, lists).\n *\n * @param {string} selector\n * @return {string[]}\n */\n\nfunction splitSelector(selector) {\n  if (selector.indexOf(',') === -1) {\n    return [selector];\n  }\n\n  var indices = [],\n      res = [],\n      inParen = 0,\n      o;\n  /*eslint-disable no-cond-assign*/\n  while (o = selectorTokenizer.exec(selector)) {\n    /*eslint-enable no-cond-assign*/\n    switch (o[0]) {\n      case '(':\n        inParen++;\n        break;\n      case ')':\n        inParen--;\n        break;\n      case ',':\n        if (inParen) break;\n        indices.push(o.index);\n    }\n  }\n  for (o = indices.length; o--;) {\n    res.unshift(selector.slice(indices[o] + 1));\n    selector = selector.slice(0, indices[o]);\n  }\n  res.unshift(selector);\n  return res;\n}\n\nfunction joinSelectors(a, b) {\n  var as = splitSelector(a).map(function (a) {\n    return !(a.indexOf('&') >= 0) ? '&' + a : a;\n  });\n  var bs = splitSelector(b).map(function (b) {\n    return !(b.indexOf('&') >= 0) ? '&' + b : b;\n  });\n\n  return bs.reduce(function (arr, b) {\n    return arr.concat(as.map(function (a) {\n      return b.replace(/\\&/g, a);\n    }));\n  }, []).join(',');\n}\n\nfunction joinMediaQueries(a, b) {\n  return a ? '@media ' + a.substring(6) + ' and ' + b.substring(6) : b;\n}\n\nfunction isMediaQuery(key) {\n  return key.indexOf('@media') === 0;\n}\n\nfunction isSupports(key) {\n  return key.indexOf('@supports') === 0;\n}\n\nfunction joinSupports(a, b) {\n  return a ? '@supports ' + a.substring(9) + ' and ' + b.substring(9) : b;\n}\n\n// mutable! modifies dest.\nfunction construct(dest, _ref) {\n  var _ref$selector = _ref.selector,\n      selector = _ref$selector === undefined ? '' : _ref$selector,\n      _ref$mq = _ref.mq,\n      mq = _ref$mq === undefined ? '' : _ref$mq,\n      _ref$supp = _ref.supp,\n      supp = _ref$supp === undefined ? '' : _ref$supp,\n      _ref$inputs = _ref.inputs,\n      inputs = _ref$inputs === undefined ? {} : _ref$inputs;\n\n  var inputArray = !Array.isArray(inputs) ? [inputs] : (0, _flatten2.default)(inputs);\n\n  inputArray.filter(function (x) {\n    return !!x;\n  }).forEach(function (input) {\n    var src = input;\n\n    Object.keys(src || {}).forEach(function (key) {\n      if (isSelector(key)) {\n        // todo - regex test the string to look for prefixedpseudos\n        if (prefixedPseudoSelectors[key]) {\n          prefixedPseudoSelectors[key].forEach(function (p) {\n            return construct(dest, {\n              selector: joinSelectors(selector, p),\n              mq: mq,\n              supp: supp,\n              inputs: src[key]\n            });\n          });\n        }\n        construct(dest, {\n          selector: joinSelectors(selector, key),\n          mq: mq,\n          supp: supp,\n          inputs: src[key]\n        });\n      } else if (isMediaQuery(key)) {\n        construct(dest, {\n          selector: selector,\n          mq: joinMediaQueries(mq, key),\n          supp: supp,\n          inputs: src[key]\n        });\n      } else if (isSupports(key)) {\n        construct(dest, {\n          selector: selector,\n          mq: mq,\n          supp: joinSupports(supp, key),\n          inputs: src[key]\n        });\n      } else {\n        var _dest = dest;\n        if (supp) {\n          _dest[supp] = _dest[supp] || {};\n          _dest = _dest[supp];\n        }\n        if (mq) {\n          _dest[mq] = _dest[mq] || {};\n          _dest = _dest[mq];\n        }\n        if (selector) {\n          _dest[selector] = _dest[selector] || {};\n          _dest = _dest[selector];\n        }\n\n        if (key === 'label') {\n          if (hasLabels) {\n            // concat at root of object\n            dest.label = dest.label.concat(src.label);\n          }\n        } else {\n          _dest[key] = src[key];\n        }\n      }\n    });\n  });\n\n  return dest;\n}\n\nfunction groupByType(style) {\n  // we can be sure it's not infinitely nested here\n  var plain = void 0,\n      selects = void 0,\n      medias = void 0,\n      supports = void 0;\n  Object.keys(style).forEach(function (key) {\n    if (key.indexOf('&') >= 0) {\n      selects = selects || {};\n      selects[key] = style[key];\n    } else if (key.indexOf('@media') === 0) {\n      medias = medias || {};\n      medias[key] = groupByType(style[key]);\n    } else if (key.indexOf('@supports') === 0) {\n      supports = supports || {};\n      supports[key] = groupByType(style[key]);\n    } else if (key === 'label') {\n      if (style.label.length > 0) {\n        plain = plain || {};\n        plain.label = hasLabels ? style.label.join('.') : '';\n      }\n    } else {\n      plain = plain || {};\n      plain[key] = style[key];\n    }\n  });\n  return { plain: plain, selects: selects, medias: medias, supports: supports };\n}\n\nfunction parse(css) {\n  var parsed = groupByType(construct({ label: [] }, { inputs: css }));\n  var className = 'css-' + (0, _hash2.default)(parsed);\n  return { className: className, parsed: parsed };\n}"]},"metadata":{},"sourceType":"script"}