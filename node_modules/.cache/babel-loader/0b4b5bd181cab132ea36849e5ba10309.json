{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Documents/UNB/MDS/ObraCerta/front/src/components/ProfileAvatarEditor/index.js\";\nimport React, { useRef, useState } from 'react';\nimport AvatarEditor from 'react-avatar-editor';\nimport { FaSearchMinus, FaSearchPlus } from 'react-icons/fa';\nimport Button from '../Button';\nimport Space from '../Space';\nimport Box, { Background, Info } from './styles';\n/**\n * Representa um componente para troca de imagem de perfil de usuário\n * @param {object} props\n * @param {string} props.src - Caminho da imagem atual de perfil\n */\n\nfunction ProfileAvatarEditor(props) {\n  const [Img, setImg] = useState(props.src); //Usada para comparação de mudança\n\n  const [imgFile, setImgFile] = useState(Img); //Armazena um novo upload de imagem\n\n  const [scale, setScale] = useState(1); //Defini o zoom do corte da imagem\n\n  const imgRef = useRef(null); //Referência a imagem editada de dentro do componente AvatarEditor\n\n  const [resettable, setResettable] = useState(false);\n\n  function onClickSave() {\n    if (imgRef) {\n      setImgFile(imgRef.current.getImageScaledToCanvas().toDataURL());\n      setImg(imgRef.current.getImageScaledToCanvas().toDataURL());\n      props.handleNovaImagem(imgRef.current.getImageScaledToCanvas());\n      setResettable(true);\n      setScale(1);\n    }\n  }\n\n  function onClickReset() {\n    setResettable(false);\n    setImgFile(props.src);\n    setImg(props.src);\n    props.handleNovaImagem('');\n    setScale(1);\n  }\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AvatarEditor, {\n    ref: imgRef,\n    image: imgFile,\n    width: 280,\n    height: 210,\n    border: 0,\n    color: [20, 208, 174, 1.0] // RGBA\n    ,\n    scale: scale,\n    borderRadius: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  })), imgFile !== Img && /*#__PURE__*/React.createElement(Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Arraste a imagem para posicionar\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, imgFile !== Img ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FaSearchMinus, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    step: \"0.1\",\n    value: scale,\n    onChange: event => setScale(parseFloat(event.target.value)),\n    min: \"0.5\",\n    max: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FaSearchPlus, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onClickReset(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, \"Cancelar\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onClickSave(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, \"Confirmar\"))) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, resettable ? /*#__PURE__*/React.createElement(Button, {\n    second: true,\n    onClick: () => onClickReset(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, \"Desfazer altera\\xE7\\xE3o\") : /*#__PURE__*/React.createElement(Button, {\n    second: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 33\n    }\n  }, \"Alterar foto do perfil\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/jpeg\",\n    onChange: event => setImgFile(event.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 37\n    }\n  }))))));\n}\n\nexport default ProfileAvatarEditor;","map":{"version":3,"sources":["/home/matheus/Documents/UNB/MDS/ObraCerta/front/src/components/ProfileAvatarEditor/index.js"],"names":["React","useRef","useState","AvatarEditor","FaSearchMinus","FaSearchPlus","Button","Space","Box","Background","Info","ProfileAvatarEditor","props","Img","setImg","src","imgFile","setImgFile","scale","setScale","imgRef","resettable","setResettable","onClickSave","current","getImageScaledToCanvas","toDataURL","handleNovaImagem","onClickReset","event","parseFloat","target","value","files"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport AvatarEditor from 'react-avatar-editor';\nimport { FaSearchMinus, FaSearchPlus } from 'react-icons/fa';\nimport Button from '../Button';\nimport Space from '../Space';\nimport Box, { Background, Info } from './styles';\n\n/**\n * Representa um componente para troca de imagem de perfil de usuário\n * @param {object} props\n * @param {string} props.src - Caminho da imagem atual de perfil\n */\nfunction ProfileAvatarEditor(props) {\n    const [Img, setImg] = useState(props.src); //Usada para comparação de mudança\n    const [imgFile, setImgFile] = useState(Img); //Armazena um novo upload de imagem\n    const [scale, setScale] = useState(1); //Defini o zoom do corte da imagem\n    const imgRef = useRef(null); //Referência a imagem editada de dentro do componente AvatarEditor\n    const [resettable, setResettable] = useState(false);\n\n    function onClickSave() {\n        if (imgRef) {\n            setImgFile(imgRef.current.getImageScaledToCanvas().toDataURL());\n            setImg(imgRef.current.getImageScaledToCanvas().toDataURL());\n            props.handleNovaImagem(imgRef.current.getImageScaledToCanvas());\n            setResettable(true);\n            setScale(1);\n        }\n    }\n\n    function onClickReset() {\n        setResettable(false);\n        setImgFile(props.src);\n        setImg(props.src);\n        props.handleNovaImagem('');\n        setScale(1);\n    }\n\n    return (\n        <Box>\n            <div>\n                <Background>\n                    <AvatarEditor\n                        ref={imgRef}\n                        image={imgFile}\n                        width={280}\n                        height={210}\n                        border={0}\n                        color={[20, 208, 174, 1.0]} // RGBA\n                        scale={scale}\n                        borderRadius={25}\n                    />\n                </Background>\n                {imgFile !== Img && (\n                    <Info>Arraste a imagem para posicionar</Info>\n                )}\n            </div>\n            <div>\n                {imgFile !== Img ? (\n                    <>\n                        <span>\n                            <FaSearchMinus />\n                            <input\n                                type=\"range\"\n                                step=\"0.1\"\n                                value={scale}\n                                onChange={(event) =>\n                                    setScale(parseFloat(event.target.value))\n                                }\n                                min=\"0.5\"\n                                max=\"10\"\n                            />\n                            <FaSearchPlus />\n                        </span>\n                        <Space />\n                        <span>\n                            <Button onClick={() => onClickReset()}>\n                                Cancelar\n                            </Button>\n                            <Button onClick={() => onClickSave()}>\n                                Confirmar\n                            </Button>\n                        </span>\n                    </>\n                ) : (\n                    <span>\n                        {resettable ? (\n                            <Button second onClick={() => onClickReset()}>\n                                Desfazer alteração\n                            </Button>\n                        ) : (\n                            <Button second>\n                                <label>\n                                    Alterar foto do perfil\n                                    <input\n                                        type=\"file\"\n                                        accept=\"image/jpeg\"\n                                        onChange={(event) =>\n                                            setImgFile(event.target.files[0])\n                                        }\n                                    />\n                                </label>\n                            </Button>\n                        )}\n                    </span>\n                )}\n            </div>\n        </Box>\n    );\n}\n\nexport default ProfileAvatarEditor;\n"]},"metadata":{},"sourceType":"module"}